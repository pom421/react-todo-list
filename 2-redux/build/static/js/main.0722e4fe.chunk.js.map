{"version":3,"sources":["components/FormTodo.js","redux/actions.js","components/Todo.js","components/TodoList.js","components/Filter.js","components/Footer.js","redux/reducers.js","App.js","serviceWorker.js","index.js"],"names":["FormTodo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","content","inputRef","React","createRef","current","focus","e","setState","target","value","console","log","key","handleSubmit","_this2","react_default","a","createElement","ref","placeholder","onChange","handleChange","onKeyPress","handleKeyPressed","Component","connect","dispatch","title","type","addTodo","Todo","_this$props","completed","id","style","textDecoration","checked","TodoList","visibility","todos","toUpperCase","filter","todo","toggleTodo","getTodosWithVisibility","map","components_Todo","defineProperty","_ref","TYPES","Filter","getColor","toLowerCase","objectSpread","backgroundColor","setVisibility","onClick","padding","borderRadius","display","marginRight","Footer","leftTodos","clear","marginLeft","length","generateId","initialTodos","i","_args","arguments","regenerator_default","wrap","_context","prev","next","undefined","stop","_marked","generatorId","reduce","memo","curr","combineReducers","action","toConsumableArray","concat","index","findIndex","newTodo","slice","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","App","es","components_FormTodo","components_TodoList","components_Filter","components_Footer","margin","border","flexDirection","alignItems","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0722e4fe.chunk.js","sourcesContent":["import React from \"react\"\nimport { connect } from \"react-redux\"\n\nimport { addTodo } from \"../redux/actions\"\n\nclass FormTodo extends React.Component {\n    state = {\n        content: \"\"\n    }\n\n    constructor(props) {\n        super(props)\n        this.inputRef = React.createRef()\n    }\n\n    componentDidMount() {\n        this.inputRef.current.focus()\n    }\n\n    handleChange(e) {\n        this.setState({\n            content: e.target.value\n        })\n    }\n\n    handleKeyPressed(e) {\n        console.log(\"key\", e.key)\n        if (e.key === \"Enter\" && this.state.content) {\n            this.props.handleSubmit(this.state.content)\n            this.setState({\n                content: \"\"\n            })\n        }\n    }\n\n    render() {\n        return (\n            <input ref={this.inputRef} placeholder=\"Add task\" value={this.state.content} onChange={(e) => this.handleChange(e)} onKeyPress={(e) => this.handleKeyPressed(e)} />\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    handleSubmit: (title) => dispatch(addTodo(title))\n})\n\nexport default connect(null, mapDispatchToProps)(FormTodo)\n","export const addTodo = (title) => {\n\n    return {\n        type: \"ADD_TODO\",\n        title\n    }\n}\n\nexport const toggleTodo = id => {\n\n    return {\n        type: \"TOGGLE_TODO\",\n        id\n    }\n}\n\nexport const setVisibility = visibility => {\n\n    return {\n        type: \"SET_VISIBILITY\",\n        visibility\n    }\n}\n\nexport const clear = () => {\n    \n    return {\n        type: \"CLEAR\"\n    }\n}\n","import React from \"react\"\n\nclass Todo extends React.Component {\n\n    render() {\n\n        const { completed, id, title, onChange } = this.props\n\n        return (\n            <li style={completed ? { textDecoration: \"line-through\" } : null}>\n                <input type=\"checkbox\" checked={completed} onChange={() => onChange(id)} />\n                {title}\n            </li>\n        )\n    }\n}\n\nexport default Todo\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { toggleTodo } from \"../redux/actions\"\nimport Todo from \"./Todo\"\n\nclass TodoList extends React.Component {\n\n    getTodosWithVisibility(visibility) {\n\n        const { todos } = this.props\n\n        switch (visibility.toUpperCase()) {\n            case \"ACTIVE\":\n                return todos.filter(todo => !todo.completed)\n            case \"COMPLETED\":\n                return todos.filter(todo => todo.completed)\n            default:\n                return todos\n        }\n    }\n\n    render() {\n\n        const { visibility, toggleTodo } = this.props\n        return (\n            <ul>\n                {\n                    this.getTodosWithVisibility(visibility).map(todo =>\n\n                        <Todo key={todo.id} id={todo.id} completed={todo.completed} title={todo.title} onChange={() => toggleTodo(todo.id)} title={todo.title} />\n\n                    )\n\n                }\n            </ul>)\n    }\n}\n\nconst mapStateToProps = ({ todos, visibility }) => ({\n    todos,\n    visibility\n})\n\nconst mapDispatchToProps = dispatch => ({\n    toggleTodo: id => dispatch(toggleTodo(id))\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\n\nimport { setVisibility } from \"../redux/actions\"\n\nconst TYPES = [\"All\", \"Active\", \"Completed\"]\n\nclass Filter extends React.Component {\n    static style = {\n        padding: \"3px 5px\",\n        borderRadius: \"5px\",\n        display: \"inline\",\n        marginRight: 10\n    }\n\n    getColor = (type, visibility) => {\n        return visibility.toLowerCase() !== type.toLowerCase() ? Filter.style : { ...Filter.style, ...{ backgroundColor: \"red\" } }\n    }\n\n    render() {\n\n        const { visibility, setVisibility } = this.props\n\n        return (\n            <ul>\n                {TYPES.map((type, key) =>\n                    <li style={this.getColor(type, visibility)} key={key} onClick={() => setVisibility(type)}>\n                        {type}\n                    </li>\n                )}\n            </ul>)\n    }\n}\n\nconst mapStateToProps = ({ visibility }) => ({\n    visibility\n})\n\nconst mapDispatchToProps = dispatch => ({\n    setVisibility: type => dispatch(setVisibility(type))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\n\nimport { clear } from \"../redux/actions\"\n\nclass Footer extends React.Component {\n\n    render() {\n\n        const { leftTodos, clear } = this.props\n\n        return (\n            <div>\n                {leftTodos} items left\n\n                <button onClick={clear} style={{ marginLeft: 20 }}>Clear completed</button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = ({ todos }) => ({\n    leftTodos: todos.filter(todo => !todo.completed).length\n})\n\nconst mapDispatchToProps = dispatch => ({\n    clear: () => dispatch(clear())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Footer)\n","import { combineReducers } from \"redux\"\n\nconst initialTodos = [\n    {\n        id: 0,\n        title: \"ejzroize\",\n        completed: false\n    },\n    {\n        id: 1,\n        title: \"azeaze\",\n        completed: false\n    },\n    {\n        id: 3,\n        title: \"bbbb\",\n        completed: false\n    }\n]\n\nfunction* generateId(i = 0) {\n    while (true) {\n        yield i++\n    }\n}\n\nconst max = initialTodos.reduce((memo, curr) => curr.id > memo ? curr.id : memo, 0)\n\nconst generatorId = generateId(max + 1)\n\nconst todoReducer = (state = initialTodos, action) => {\n    switch (action.type) {\n        case \"ADD_TODO\":\n            return [...state, {\n                id: generatorId.next().value,\n                title: action.title,\n                completed: false\n            }]\n        case \"TOGGLE_TODO\":\n            const index = state.findIndex(todo => todo.id === action.id)\n            let newTodo = {\n                ...state[index]\n            }\n\n            newTodo.completed = !newTodo.completed\n\n            return [...state.slice(0, index),\n                newTodo,\n            ...state.slice(index + 1)\n            ]\n\n        case \"CLEAR\":\n            return state.filter(todo => !todo.completed)\n\n        default:\n            return state\n    }\n}\n\nconst visibilityReducer = (state = \"ALL\", action) => {\n    switch (action.type) {\n        case \"SET_VISIBILITY\":\n            return action.visibility\n        default:\n            return state\n    }\n}\n\nexport default combineReducers({\n    todos: todoReducer,\n    visibility: visibilityReducer\n})","import React, { Component } from 'react';\n\nimport FormTodo from \"./components/FormTodo\"\nimport TodoList from \"./components/TodoList\"\nimport Filter from \"./components/Filter\"\nimport Footer from \"./components/Footer\"\n\n\nimport { createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport reducers from \"./redux/reducers\"\n\nimport './App.css';\n\nconst store = createStore(reducers, \n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nclass App extends Component {\n\n  static style = { margin: \"10px 30px\", padding: \"30px\", border: \"1px solid grey\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <div style={{...App.style}}>\n          <h1>To do list</h1>\n          <FormTodo />\n          <TodoList />\n          <Filter />\n          <Footer />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}